<?xml version="1.0" encoding="UTF-8"?>
<project name="imported" default="help">

  <property environment="env"/>

  <!-- Android SDK -->
  <condition property="_dx" value="dx.bat" else="dx">
    <os family="windows"/>
  </condition>
  <condition property="_apkbuilder" value="apkbuilder.bat" else="apkbuilder">
    <os family="windows"/>
  </condition>
  <property name="android.jar" value="${sdk-location}/platforms/android-1.5/android.jar"/>
  <property name="maps.jar" value="${sdk-location}/add-ons/maps.jar"/>
  <property name="dx.cmd" value="${sdk-location}/platforms/android-1.5/tools/${_dx}"/>
  <property name="aapt.cmd" value="${sdk-location}/platforms/android-1.5/tools/aapt"/>
  <property name="apkbuilder.cmd" value="${sdk-location}/tools/${_apkbuilder}"/>
  <property name="adb.cmd" value="${sdk-location}/tools/adb"/>

  <!-- Scala SDK -->
  <property name="scala-compiler.jar" value="${env.SCALA_HOME}/lib/scala-compiler.jar"/>
  <property name="scala-library.jar" value="${env.SCALA_HOME}/lib/scala-library.jar"/>

  <!-- Android build files -->
  <property name="manifest.xml" value="${basedir}/AndroidManifest.xml"/>
  <xmlproperty file="${manifest.xml}" collapseAttributes="true"/>
  <property name="classes.dex" value="${basedir}/bin/classes.dex"/>
  <property name="empty.apk" value="${basedir}/bin/${ant.project.name}.ap_"/>
  <property name="basename.apk" value="${ant.project.name}-debug.apk"/>
  <property name="package.apk" value="${basedir}/bin/${basename.apk}"/>

  <taskdef name="apkbuilder"
    classname="com.android.ant.ApkBuilderTask"
    classpathref="android.antlibs"
  />
  <path id="scala.path">
    <pathelement path="${scala-compiler.jar}"/>
    <pathelement path="${scala-library.jar}"/>
  </path>
  <taskdef
    resource="scala/tools/ant/antlib.xml"
    classpathref="scala.path"
  />

  <uptodate property="gen.uptodate" targetfile="${basedir}/gen/.gen-complete">
    <srcfiles dir="${basedir}/gen" includes="**/*.java"/>
  </uptodate>
  <uptodate property="compile.uptodate" targetfile="${basedir}/bin/.compile-complete">
    <srcfiles dir="${basedir}/gen" includes="**/*.java"/>
  </uptodate>
  <uptodate property="dex.uptodate" targetfile="${classes.dex}">
    <srcfiles dir="${basedir}/bin/classes" includes="**/*.class"/>
  </uptodate>
  <uptodate property="pkg.uptodate" targetfile="${empty.apk}">
    <srcfiles dir="${basedir}/bin" includes="**/*.dex,**/*.xml"/>
  </uptodate>
  <uptodate property="apk.uptodate" targetfile="${package.apk}">
    <srcfiles dir="${basedir}/bin" includes="**/*.dex,**/*.xml"/>
  </uptodate>

  <target name="resource-src" unless="gen.uptodate">
    <mkdir dir="${basedir}/gen"/>
    <echo message="Generating R.java / Manifest.java from the resources..."/>
    <exec executable="${aapt.cmd}">
      <arg line="package -m -J '${basedir}/gen' -M '${manifest.xml}' -S '${basedir}/res' -I '${android.jar}'"/>
    </exec>
    <touch file="${basedir}/gen/.gen-complete" verbose="no"/>
  </target>

  <target name="compile" depends="resource-src" unless="compile.uptodate">
    <path id="boot.path">
      <pathelement location="${android.jar}"/>
      <pathelement location="${maps.jar}"/>
    </path>
    <mkdir dir="${basedir}/bin/classes"/>
    <javac
       srcdir="${basedir}/src${path.separator}${basedir}/gen" includes="**/*.java"
       destdir="${basedir}/bin/classes" bootclasspathref="boot.path"
       target="1.5" source="1.5" encoding="ascii">
      <classpath>
        <pathelement location="${android.jar}"/>
      </classpath>
    </javac>
    <scalac
      srcdir="${basedir}/src" includes="**/*.scala"
      destdir="${basedir}/bin/classes" deprecation="on">
      <classpath>
        <pathelement location="${scala-library.jar}"/>
        <pathelement location="${android.jar}"/>
        <pathelement location="${basedir}/bin/classes"/>
      </classpath>
    </scalac>
    <touch file="${basedir}/bin/.compile-complete" verbose="no"/>
  </target>

  <target name="dex" depends="compile" unless="dex.uptodate">
    <echo message="Converting compiled files and external libraries into bin/classes.dex..."/>
    <!-- IMPORTANT !                                                 -->
    <!-- in shell script /opt/android/platforms/android-1.5/tools/dx -->
    <!-- add the following code on line 60: javaOpts="-Xmx768M"      -->
    <exec executable="${dx.cmd}">
      <arg line="--dex --no-optimize --output='${classes.dex}' '${basedir}/bin/classes' '${scala-library.jar}'"/>
    </exec>
  </target>

  <target name="package-resources" depends="dex" unless="pkg.uptodate">
    <echo message="Packaging resources"/>
    <exec executable="${aapt.cmd}">
      <arg line="package -f -M '${manifest.xml}' -S '${basedir}/res' -I '${android.jar}' -F '${empty.apk}'"/>
    </exec>
  </target>

  <target name="debug" depends="package-resources" unless="apk.uptodate">
    <apkbuilder
      basename="${ant.project.name}" outfolder="${basedir}/bin"
      signed="true" verbose="true"
    />
    <exec executable="${apkbuilder.cmd}">
      <arg line="'${package.apk}' -v -z '${empty.apk}' -f '${classes.dex}'"/>
    </exec>
  </target>

  <target name="release">
    <echo message="Sorry. Not yet implemented"/>
  </target>

  <target name="install" depends="debug">
    <echo message="Installing bin/${basename.apk} onto default emulator..."/>
    <exec executable="${adb.cmd}">
      <arg line="install '${package.apk}'"/>
    </exec>
  </target>

  <target name="reinstall" depends="debug">
    <echo message="Reinstalling bin/${basename.apk} onto default emulator..."/>
    <exec executable="${adb.cmd}">
      <arg line="install -r '${package.apk}'"/>
    </exec>
  </target>

  <target name="uninstall">
    <exec executable="${adb.cmd}">
      <arg line="uninstall '${manifest.package}'"/>
    </exec>
  </target>

  <target name="help">
    <echo message="Android Ant Build. Available targets:"/>
    <echo message="   help:      Display this help."/>
    <echo message="   debug:     Builds the application and sign it with a debug key."/>
    <echo message="   install:   Install the debug package onto a running emulator or device."/>
    <echo message="   reinstall: Reinstall the debug package onto a running emulator or device."/>
    <echo message="   uninstall: Uninstall the application from a running emulator or device."/>
    <echo message="   clean:     Clean up build files from project."/> 
  </target>

  <macrodef name="remove">
    <attribute name="dir"/>
    <sequential>
      <delete dir="@{dir}" includeemptydirs="yes" quiet="yes" failonerror="no"/>
    </sequential>
  </macrodef>

  <target name="clean" description="clean up">
    <echo message="Cleaning project '${ant.project.name}'..."/>
    <remove dir="${basedir}/bin"/>
    <remove dir="${basedir}/gen"/>
  </target>

</project>
