<?xml version="1.0" encoding="UTF-8"?>
<project name="build-scala">

    <!-- This file is imported by the main Ant script. -->

    <!-- Scala SDK (www.scala-lang.org) -->
    <property name="scala-compiler.jar" value="${scala.dir}/lib/scala-compiler.jar" />
    <property name="scala-library.jar" value="${scala.dir}/lib/scala-library.jar" />
    <!-- YGuard SDK (www.yworks.com/products/yguard) -->
    <property name="yguard.jar" value="${yguard.dir}/lib/yguard.jar" />

    <path id="scala.path">
        <pathelement path="${scala-compiler.jar}" />
        <pathelement path="${scala-library.jar}" />
    </path>
    <taskdef
        resource="scala/tools/ant/antlib.xml"
        classpathref="scala.path" />
    <taskdef
        name="yguard" classname="com.yworks.yguard.YGuardTask"
        classpath="${yguard.jar}" />

    <resourcecount property="scala.files.count">
        <fileset dir="${source.dir}" includes="**/*.scala" />
    </resourcecount>
    <condition property="myapp.containsScala">
        <not><equals arg1="${scala.files.count}" arg2="0" /></not>
    </condition>

    <uptodate property="myapp.isUpToDate" targetfile="${out.dir}/classes.complete">
        <srcfiles dir="${source.dir}" includes="**/*.scala,**/*.java" />
        <srcfiles dir="${resource.dir}" />
    </uptodate>

    <target name="scala-compile" depends="compile"
        description="Compiles project's .scala files into .class files"
        if="myapp.containsScala" unless="myapp.isUpToDate">
        <condition property="logging" value="verbose" else="none">
            <istrue value="${verbose}" />
        </condition>
        <property prefix="scala"
            resource="compiler.properties"
            classpathref="scala.path" />
        <echo
            message="Scala version ${scala.version.number} - http://scala-lang.org"
            level="info" taskname="scalac" />
        <scalac
            srcdir="${source.dir}" includes="**/*.scala"
            destdir="${out.classes.dir}"
            logging="${logging}" addparams="${scalac.addparams}">
            <classpath>
                <path refid="android.target.classpath" />
                <pathelement location="${scala-library.jar}" />
                <pathelement location="${out.classes.dir}" />
            </classpath>
        </scalac>
        <touch file="${out.dir}/classes.complete" verbose="no"/>
    </target>

    <target name="-adb-test" unless="myapp.isuptodate">
        <echo
            message="Checking if Scala libraries are installed on emulator or device..."
            taskname="-adb-test" />
        <exec executable="${adb}" failonerror="false" outputproperty="adb.out">
            <arg line="${adb.device.arg}" />
            <arg line="shell /bin/ls -s /data/framework/scala-*.jar" />
        </exec>
        <condition property="scala-shrink.notRequired"><or>
            <contains string="${adb.out}" substring="/data/framework/scala-" />
        </or></condition>
        <echo message="${adb.out}" taskname="-adb-test" />
    </target>

    <target name="scala-shrink" depends="scala-compile, -adb-test"
        description="Shrink code size of Scala library"
        if="myapp.containsScala" unless="scala-shrink.notRequired">
        <property
            name="scala-library-shrinked.jar"
            value="${out.dir}/scala-library-shrinked.jar" />
        <property
            name="myapp.jar"
            value="${out.dir}/${ant.project.name}.jar" />
        <jar destfile="${myapp.jar}" basedir="${out.classes.dir}" />
        <yguard>
            <inoutpair in="${scala-library.jar}" out="${scala-library-shrinked.jar}" />
            <externalclasses>
                <pathelement location="${android.jar}" />
            </externalclasses>
            <shrink logfile="${out.dir}/yshrinklog.xml">
                <entrypointjar name="${myapp.jar}" />
            </shrink>
        </yguard>
        <unjar src="${scala-library-shrinked.jar}" dest="${out.classes.dir}" />
    </target>

</project>
