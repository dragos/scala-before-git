<?xml version="1.0" encoding="UTF-8"?>
<project name="android" default="help">

    <description>
Builds the Android applications targeted to the Scala platform.
    </description>

    <!-- Setting-up Ant contrib tasks -->
    <taskdef
        resource="net/sf/antcontrib/antlib.xml"
        classpath="${ant-contrib.jar}"
    />

    <!-- Building list of project directories -->
    <pathconvert property="dirs" pathsep=",">
        <path>
            <dirset dir="${basedir}" includes="*" excludes="*.xml,*.properties" />
        </path>
    </pathconvert>

    <target name="scala-compile" description="compile applications">
        <ant.dirs target="scala-compile" />
    </target>

    <target name="debug" description="build applications in debug mode">
        <ant.dirs target="debug" />
    </target>

    <target name="release" description="build applications in release mode">
        <ant.dirs target="release"/>
    </target>

    <target name="install" description="install applications">
        <!--<confirm message="Is the Android emulator up and ready ?" />-->
        <ant.dirs target="install"/>
    </target>

    <target name="uninstall" description="uninstall applications">
        <ant.dirs target="uninstall"/>
    </target>

    <target name="clean" description="clean up">
        <ant.dirs target="clean"/>
    </target>

    <target name="help">
        <echo message="Android Ant Build. Available targets:"/>
        <echo message="   help:          Display this help."/>
        <echo message="   scala-compile: Compile applications."/>
        <echo message="   debug:         Build applications in debug mode."/>
        <echo message="   release:       Build applications in release mode."/>
        <echo message="   uninstall:     Uninstall applications from a running emulator or device."/>
        <echo message="   clean:         Clean up build files from projects."/>
        <echo message="Available advanced targets:"/>
        <echo message="   setenv:        Update build.properties files according to current environment."/>
    </target>

    <target name="setenv">
        <condition property="prop.file" value="${basedir}/ant-windows.properties">
           <and>
               <os family="windows" />
               <available file="${basedir}/ant-windows.properties" />
           </and>
        </condition>
        <condition property="prop.file" value="${basedir}/ant-unix.properties">
           <and>
               <os family="unix" />
               <available file="${basedir}/ant-unix.properties" />
           </and>
        </condition>
        <echo message="Reading environment settings from ${prop.file}" level="verbose" />
        <!--<property file="${prop.file}" prefix="os" /> -->
        <loadproperties srcfile="${prop.file}" prefix="os" >
            <filterchain>
                <expandproperties/>
            </filterchain>
        </loadproperties>
        <property name="os.sdk.dir" value="" />
        <property name="os.scala.dir" value="" />
        <property name="os.yguard.dir" value="" />
        <echo message="prop.file=${prop.file}" level="debug" />
        <if><isset property="prop.file" />
        <then>
            <for list="${dirs}" param="dir"><sequential>
                <replaceproperty
                    name="sdk.dir"
                    value="${os.sdk.dir}"
                    dir="@{dir}"/>
                <replaceproperty
                    name="scala.dir"
                    value="${os.scala.dir}"
                    dir="@{dir}"/>
                <replaceproperty
                    name="yguard.dir"
                    value="${os.yguard.dir}"
                    dir="@{dir}"/>
            </sequential></for>
        </then>
        <else>
            <echo message="The setenv task needs a configuration file" />
        </else>
        </if>
    </target>

    <macrodef name="ant.dirs">
        <attribute name="target" />
        <sequential>
            <for list="${dirs}" param="dir">
                <sequential>
                    <ant dir="@{dir}" target="@{target}" />
                </sequential>
            </for>
        </sequential>
    </macrodef>

    <macrodef name="replaceproperty">
        <attribute name="name" />
        <attribute name="value" />
        <attribute name="dir" />
        <sequential>
            <replaceregexp byline="true">
                <regexp pattern="^@{name}=(.*)"/>
                <substitution expression="@{name}=@{value}"/>
                <fileset dir="@{dir}" includes="build.properties"/>
            </replaceregexp>
        </sequential>
    </macrodef>

    <macrodef name="confirm">
        <attribute name="message" />
        <sequential>
            <input message="@{message}"
                validargs="y,n"
                addproperty="do.confirm"
            />
            <condition property="do.abort">
               <equals arg1="n" arg2="${do.confirm}"/>
            </condition>
            <fail if="do.abort">Build aborted by user.</fail>    
        </sequential>
    </macrodef>

</project>
